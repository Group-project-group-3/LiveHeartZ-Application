import * as React from 'react';
import { OverridableComponent } from '@mui/types';
import { MenuItemProps, MenuItemOwnerState, MenuItemTypeMap } from './MenuItem.types';
export declare const overridesResolver: (props: import("./MenuItem.types").MenuItemOwnProps & Omit<import("@mui/material").ButtonBaseOwnProps, "classes"> & Omit<Omit<React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement>, "ref"> & {
    ref?: ((instance: HTMLLIElement | null) => void) | React.RefObject<HTMLLIElement> | null | undefined;
}, "action" | "tabIndex" | "children" | "onFocusVisible" | "centerRipple" | "disableRipple" | "disableTouchRipple" | "focusRipple" | "focusVisibleClassName" | "LinkComponent" | "TouchRippleProps" | "touchRippleRef" | keyof import("./MenuItem.types").MenuItemOwnProps> & {
    component?: React.ElementType<any, keyof React.JSX.IntrinsicElements> | undefined;
} & {
    ownerState: MenuItemOwnerState;
}, styles: any) => any[];
declare const MenuItem: OverridableComponent<MenuItemTypeMap>;
export default MenuItem;
